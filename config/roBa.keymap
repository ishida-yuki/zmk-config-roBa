#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&sl { release-after-ms = <250>; };

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 19>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <8 9>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <7 8>;
        };

        single_quote {
            bindings = <&none>;
            key-positions = <20 21>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        mkp_exit_AML: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl MOUSE>;

            label = "MKP_EXIT_AML";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R             &kp T                                                 &kp Y        &kp U  &lt 5 I    &kp O    &lt 5 P
&kp A             &kp S         &kp D         &kp F             &kp G        &kp ESCAPE            &kp LEFT_BRACKET   &kp H        &kp J  &kp K      &kp L    &kp SEMICOLON
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V             &kp B        &kp TAB               &kp RIGHT_BRACKET  &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt 6 LANGUAGE_2  &lt 2 SPACE  &lt 3 LANGUAGE_1      &kp BACKSPACE      &lt 1 ENTER                             &kp DEL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        Layer_1 {
            bindings = <
&kp NUMBER_1    &kp NUMBER_2      &kp NUMBER_3       &kp NUMBER_4          &kp N5                                                                  &kp NUMBER_6  &kp N7         &kp N8    &kp N9    &kp N0
&trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans                    &trans                 &trans        &mkp MB1       &mkp MB2  &mkp MB3  &trans
&kp LEFT_SHIFT  &trans            &trans             &trans                &trans                 &kp LEFT_PARENTHESIS      &kp RIGHT_PARENTHESIS  &kp PG_UP     &kp PAGE_DOWN  &trans    &trans    &trans
&trans          &trans            &trans             &trans                &trans                 &trans                    &trans                 &trans                                           &trans
            >;
        };

        Layer_2 {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                                      &kp LCTRL  &kp AMPERSAND  &kp ASTERISK  &kp MINUS  &kp UNDERSCORE
&kp GRAVE        &kp TILDE    &trans    &trans      &trans       &kp UNDERSCORE      &kp UNDERSCORE  &trans     &trans         &trans        &kp EQUAL  &kp PLUS
&kp F1           &kp F2       &kp F3    &kp F4      &kp F5       &kp F11             &kp F12         &kp F6     &kp F7         &kp F8        &kp F9     &kp F10
&trans           &trans       &trans    &trans      &trans       &trans              &trans          &trans                                             &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans         &kp LC(LS(TAB))  &kp UP_ARROW    &kp LC(TAB)      &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &kp HOME       &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &kp PAGE_DOWN  &trans           &trans          &trans           &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                                           &trans
            >;
        };

        MOUSE {
            bindings = <
&to_layer_0 Q  &to_layer_0 W  &to_layer_0 E  &to_layer_0 R           &to_layer_0 T                                         &to_layer_0 Y    &to_layer_0 U  &kp LC(T)  &to_layer_0 O  &mo 5
&to_layer_0 A  &to_layer_0 S  &to_layer_0 D  &to_layer_0 F           &to_layer_0 G  &trans                      &kp LC(V)  &kp LC(LS(TAB))  &mkp MB1       &mkp MB3   &mkp MB2       &kp LC(TAB)
&to_layer_0 Z  &to_layer_0 X  &to_layer_0 C  &to_layer_0 V           &to_layer_0 B  &trans                      &kp LC(C)  &to_layer_0 N    &mkp MB4       &kp LC(W)  &mkp MB5       &trans
&trans         &trans         &trans         &to_layer_0 LANGUAGE_2  &trans         &to_layer_0 LANGUAGE_1      &trans     &trans                                                    &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
